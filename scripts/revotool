#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""Revotool -- a CLI tool for working with MODX Revolutionâ„¢.

Usage:
  revotool pull <remote> [options]
  revotool push <remote> [options]
  revotool remote add <remote> <host> [<username>]
  revotool remote remove <remote>
  revotool (-h | --help)
  revotool --version

Options:
  -s --save-password   Save the password in .netrc.
  -h --help            Show this screen.
  --version            Show version.

"""

import sys
from os import path
from getpass import getpass
from netrc import netrc
from docopt import docopt
from revotool import __version__
from revotool.fs import FS
from revotool.modx import MODXClient
from revotool.pull import Puller
from revotool.push import Pusher
try:
    import __builtin__
    input = getattr(__builtin__, 'raw_input')
except (ImportError, AttributeError):
    pass


REMOTES_FILE = '_revotool/remotes.json'


if __name__ == '__main__':
    arguments = docopt(__doc__, version=__version__)
    fs = FS('.')
    try:
        remotes = fs.read_data(REMOTES_FILE)
    except (OSError, IOError):
        remotes = {}

    if arguments['remote']:
        if arguments['add']:
            remotes[arguments['<remote>']] = {
                'host': arguments['<host>'],
                'username': arguments['<username>']
            }
        if arguments['remove']:
            del remotes[arguments['<remote>']]
        fs.write_data(REMOTES_FILE, remotes)
        sys.exit(0)

    if arguments['<remote>']:
        remote_name = arguments['<remote>']
        try:
            remote = remotes[remote_name]
        except KeyError:
            print('Remote {0} not found.'.format(remote_name))
            sys.exit(1)
        host = remote['host']
        from_rc = netrc().authenticators(host)
        username, password = None, None
        if from_rc:
            username, _, password = from_rc
        if not username:
            username = remote['username'] or input('Username: ')
        if not password:
            password = getpass('Password for {0} on {1}: '.format(
                username, host))
        if not from_rc and arguments['--save-password']:
            with open(path.expanduser('~/.netrc'), 'a') as f:
                f.write('\nmachine {0}\n  login {1}\n  password {2}'.format(
                    host, username, password))
        modxclient = MODXClient(host, username, password)

    if arguments['pull']:
        puller = Puller(remote_name)
        puller.fs = fs
        puller.modxclient = modxclient
        for t in ['template', 'chunk', 'snippet', 'plugin']:
            puller.pull(t)

    if arguments['push']:
        pusher = Pusher(remote_name)
        pusher.fs = fs
        pusher.modxclient = modxclient
        for t in ['template', 'chunk', 'snippet', 'plugin']:
            pusher.push(t)

    # print(arguments)
else:
    print('WTF are you doing?!')
